let restaurant;var map;function grabGoogleMapsJS(){var e=document.createElement("script");return e.type="text/javascript",e.src="https://maps.googleapis.com/maps/api/js?v=3&key=AIzaSyCkztJBGXVEEZPAtlOkFhUT1CrKSi1WJg4&libraries=places&callback=initMap",e.defer=!0,e.async=!0,e}function addMapToApp(){var e=grabGoogleMapsJS();console.log("Loading Google Map Js file: "+e),document.getElementById("map").style.display="block",document.getElementById("toggle-map").style.display="none",window.matchMedia("(max-width: 768px)").matches&&(document.getElementById("map-container").style.minHeight="320px",document.getElementById("map-container").style.height="320px"),document.getElementsByTagName("head")[0].appendChild(e)}function addReviewModal(){var e=document.getElementById("modalAddReview"),t=document.getElementById("buttonAddReview"),r=document.getElementsByClassName("modal-close")[0];t.onclick=function(){e.style.display="block"},r.onclick=function(){e.style.display="none"},window.onclick=function(t){t.target==e&&(e.style.display="none")}}function postData(e,t){return fetch(e,{method:"POST",body:JSON.stringify(t),headers:new Headers({"Content-Type":"application/json"})}).then(e=>e.json())}document.addEventListener("DOMContentLoaded",e=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):fillBreadcrumb()}),window.matchMedia("(min-width: 769px)").matches?addMapToApp():(document.getElementById("map-container").style.minHeight="120px",document.getElementById("map-container").style.height="120px")}),window.initMap=(()=>{fetchRestaurantFromURLWithoutFillingHTML((e,t)=>{e?console.error(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))})}),fetchRestaurantFromURLWithoutFillingHTML=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(t,r)=>{self.restaurant=r,r?e(null,r):console.error(t)}):(error="No restaurant id in URL",e(error,null))}),addReviewModal();var buttonToggleFavourite=document.getElementById("buttonToggleFavourite");function storeFavIDB(e){const t=indexedDB.open("restaurant-cachedIDB-v1",1);t.onerror=function(e){console.error("indexedDB error")},t.onupgradeneeded=function(e){var t=e.target.result;t.createObjectStore("restaurant-favorite-v1",{keyPath:"id"}),t.createObjectStore("restaurant-review-v1",{keyPath:"id"})},t.onsuccess=function(t){var r=t.target.result,n=(r.transaction("restaurant-favorite-v1","readwrite").objectStore("restaurant-favorite-v1"),{url:e,id:(new Date).getTime()});r.transaction("restaurant-favorite-v1","readwrite").objectStore("restaurant-favorite-v1").put(n)}}function updateCursorForFav(e,t){var r=e.value;return r.is_favorite="Favorite"==t.data,e.update(r)}function changeIDBFavorite(e,t){const r=indexedDB.open("restaurant-db-v1",1);r.onerror=function(e){console.error("indexedDB error")},r.onsuccess=function(r){r.target.result.transaction("restaurant-store-v1","readwrite").objectStore("restaurant-store-v1").openCursor().onsuccess=function(r){var n=r.target.result;if(n){if(n.value.id==e)updateCursorForFav(n,t).onsuccess=function(){console.log("Update restaurant favorite for id: "+e)};n.continue()}}}}function addReview(){var e=document.getElementById("name").value,t=document.getElementById("rating").value,r=document.getElementById("comments").value;const n=getParameterByName("id");var a="http://localhost:1337/reviews/",o={restaurant_id:n,name:e,rating:t,comments:r};postData(a,o).catch(e=>{console.error("Error:",e),storeCallForAddReviewInIDB(a,o,n)}),addNewReviewToIDB(o,e,t,r,n),console.log("Close modal"),document.getElementById("modalAddReview").style.display="none"}function storeCallForAddReviewInIDB(e,t,r){const n=indexedDB.open("restaurant-cachedIDB-v1",1);n.onerror=function(e){console.error("indexedDB error")},n.onupgradeneeded=function(e){var t=e.target.result;t.createObjectStore("restaurant-review-v1",{keyPath:"id"}),t.createObjectStore("restaurant-favorite-v1",{keyPath:"id"})},n.onsuccess=function(e){var n=e.target.result,a=(n.transaction("restaurant-review-v1","readwrite").objectStore("restaurant-review-v1"),{restaurant_id:t.restaurant_id,name:t.name,rating:t.rating,comments:t.comments,id:(new Date).getTime()});console.log("Adding review for restaurant with id "+r+"  to indexDB with id "+a.id),n.transaction("restaurant-review-v1","readwrite").objectStore("restaurant-review-v1").put(a)}}function createTimeStamps(e){e.createdAt=new Date,e.updatedAt=new Date}function addNodeForReview(e){document.getElementById("reviews-list").appendChild(createReviewHTML(e))}function addNewReviewToIDB(e,t,r,n,a){const o=indexedDB.open("restaurant-db-v1",1);o.onerror=function(e){console.error("indexedDB error")},o.onsuccess=function(t){t.target.result.transaction("restaurant-store-v1","readwrite").objectStore("restaurant-store-v1").openCursor().onsuccess=function(t){var r=t.target.result;if(r){if(console.log("Trying to find id "+a+" and getting cursor for object store for id "+r.value.id+": "+r.value),r.value.id==a){var n=r.value;createTimeStamps(e),n.reviews.push(e),r.update(n).onsuccess=function(){addNodeForReview(e),console.log("adding new review for this restaurant with id : "+a)}}r.continue()}}}}function postCachedDataUponConnection(){var e;const t=indexedDB.open("restaurant-cachedIDB-v1",1);t.onerror=function(e){console.error("indexedDB error: ")},t.onupgradeneeded=function(e){var t=e.target.result;t.createObjectStore("restaurant-favorite-v1",{keyPath:"id",autoIncrement:!0}),t.createObjectStore("restaurant-review-v1",{keyPath:"id",autoIncrement:!0})},t.onsuccess=function(t){var r=(e=t.target.result).transaction("restaurant-review-v1","readwrite"),n=r.objectStore("restaurant-review-v1");console.log("Get offline object from store for reviews with read write access to indexedDB"),n.openCursor().onsuccess=function(t){var r=t.target.result;if(r){var n={};n.restaurant_id=r.value.restaurant_id,n.name=r.value.name,n.rating=r.value.rating,n.comments=r.value.comments,postData("http://localhost:1337/reviews/",n).then(t=>{console.log("delete entry for reviews with id "+ +r.value.id),e.transaction("restaurant-review-v1","readwrite").objectStore("restaurant-review-v1").delete(r.value.id).onsuccess=function(e){console.log("reviews entry deleted for this id: "+ +r.value.id)}}).catch(e=>{console.log("Could not delete the reviews entry for this id "+ +r.value.id)}),r.continue()}},n=(r=e.transaction("restaurant-favorite-v1","readwrite")).objectStore("restaurant-favorite-v1"),console.log("Get offline object from store for favorite with read write access to indexedDB"),n.openCursor().onsuccess=function(t){var r=t.target.result;r&&(fetch(r.value.url,{method:"PUT",headers:new Headers({"Content-Type":"application/json"})}).then(e=>e.json()).then(t=>{console.log("Delete favorite entry for this id: "+ +r.value.id),e.transaction("restaurant-favorite-v1","readwrite").objectStore("restaurant-favorite-v1").delete(r.value.id).onsuccess=function(e){console.log("Favorite entry in idb is deleted for this id: "+ +r.value.id)}}).catch(e=>{console.log("Could not delete favorite  entry for this id: "+ +r.value.id)}),r.continue())}}}buttonToggleFavourite.onclick=function(){buttonToggleFavourite.classList.toggle("favorite"),buttonToggleFavourite.classList.toggle("unfavorite");var e=buttonToggleFavourite.firstChild;"Favorite"==e.data?e.data="Unfavorite":e.data="Favorite";const t=getParameterByName("id");var r="http://localhost:1337/restaurants/"+t+"/?is_favorite="+("Favorite"==e.data);fetch(r,{method:"PUT",headers:new Headers({"Content-Type":"application/json"})}).then(e=>{e.json()}).catch(e=>{console.error("Error:",e),storeFavIDB(r)}),changeIDBFavorite(t,e)},postCachedDataUponConnection(),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(t,r)=>{self.restaurant=r,r?(fillRestaurantHTML(),e(null,r)):console.error(t)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-img");t.className="restaurant-img",t.src=DBHelper.imageUrlForRestaurant(e),t.alt="Restaurant "+e.name,document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type;var r=buttonToggleFavourite.firstChild;e.is_favorite?(buttonToggleFavourite.classList.add("favorite"),console.log("Setting favorite for restaurant"),r.data="Favorite"):(console.log("Setting unfavorite for restaurant"),buttonToggleFavourite.classList.add("unfavorite"),r.data="Unfavorite"),e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let r in e){const n=document.createElement("tr"),a=document.createElement("td");a.innerHTML=r,n.appendChild(a);const o=document.createElement("td");o.innerHTML=e[r],n.appendChild(o),t.appendChild(n)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{const t=document.getElementById("reviews-container"),r=document.createElement("h3");if(r.innerHTML="Reviews",t.appendChild(r),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const n=document.getElementById("reviews-list");e.forEach(e=>{n.appendChild(createReviewHTML(e))}),t.appendChild(n)}),createReviewHTML=(e=>{const t=document.createElement("li"),r=document.createElement("p");r.innerHTML=e.name,t.appendChild(r);const n=document.createElement("p");n.innerHTML=new Date(e.updatedAt).toLocaleDateString("en-US"),t.appendChild(n);const a=document.createElement("p");a.innerHTML=`Rating: ${e.rating}`,t.appendChild(a);const o=document.createElement("p");return o.innerHTML=e.comments,t.appendChild(o),t}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),r=document.createElement("li");r.innerHTML=e.name,t.appendChild(r)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const r=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return r?r[2]?decodeURIComponent(r[2].replace(/\+/g," ")):"":null});